private constructor(panel: vscode.WebviewPanel, extensionUri: vscode.Uri) {
		this._panel = panel;
		this._extensionUri = extensionUri;

		// Set the webview's initial html content
		this._update();

		// Listen for when the panel is disposed
		// This happens when the user closes the panel or when the panel is closed programmatically
		this._panel.onDidDispose(() => this.dispose(), null, this._disposables);
...

...

        const session = vscode.debug.activeDebugSession;
		const updateInfo = async () => {
			this.process_list = await this.customCommand(session, "process list");
			
			const infoPanel = this._panel.webview;
			infoPanel.html = this._getHtmlForWebview();
		};

        interval = setInterval(updateInfo, 500);
}